//
//  ViewController.swift
//  KoombiaProfilesT
//
//  Created by Gonzalo Linares Navarro on 6/02/21.
//

import UIKit
import CouchbaseLiteSwift

class ViewController: UIViewController {
    
    let viewModel = HomePostViewModel()

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = UIColor.gray
        // Do any additional setup after loading the view.
        
        let myButton = UIButton(frame: CGRect(x: 100, y: 100, width: 200, height: 100))
        myButton.center = view.center
        myButton.addTarget(self, action: #selector(buttonTapped), for: .touchUpInside)
        myButton.setTitle("Click here", for: .normal)
        view.addSubview(myButton)
        
        
        let myButton2 = UIButton(frame: CGRect(x: 50, y: 50, width: 300, height: 100))
        myButton2.addTarget(self, action: #selector(testDataBase), for: .touchUpInside)
        myButton2.setTitle("TEST DATABASE", for: .normal)
        view.addSubview(myButton2)
        
        let myButton3 = UIButton(frame: CGRect(x: 50, y: 200, width: 300, height: 100))
        myButton3.addTarget(self, action: #selector(readDatabase), for: .touchUpInside)
        myButton3.setTitle("Read DATABASE", for: .normal)
        view.addSubview(myButton3)
        
    }
    
    @objc func buttonTapped() {
        viewModel.getPosts { [weak self] (success, error) in
           print(success)
            print(self?.viewModel.homePublication)
        }
    }
    
    @objc func testDataBase() {
        let database: Database
        
        do {
            database = try Database(name: "Testing")
        } catch {
            fatalError("Problem with database dependency")
        }
        
        print(database)
        
        let mutableDocument = MutableDocument().setFloat(2.0, forKey: "version").setString("SDK", forKey: "type").setDate(Date(), forKey: "currentDate")
        
        do {
            try database.saveDocument(mutableDocument)
        } catch {
            fatalError("error saving document")
        }
        
        // Update a document.
        if let mutableDoc = database.document(withID: mutableDocument.id)?.toMutable() {
            mutableDoc.setString("Swift", forKey: "language")
            do {
                try database.saveDocument(mutableDoc)

                let document = database.document(withID: mutableDoc.id)!
                // Log the document ID (generated by the database)
                // and properties
                print("Document ID :: \(document.id)")
                print("Learning \(document.string(forKey: "language")!)")
            } catch {
                fatalError("Error updating document")
            }
        }
        
    }
    
    @objc func readDatabase() {
        let database: Database
        
        do {
            database = try Database(name: "Testing")
        } catch {
            fatalError("Problem with database dependency")
        }
        
        let query = QueryBuilder.select(SelectResult.all()).from(DataSource.database(database)).where(Expression.property("type").equalTo(Expression.string("SDK")))
        
        do {
            let result = try query.execute()
            print(result)
            print(result.allResults().count)
        } catch {
            fatalError("Error during the query")
        }
        
        
    }
}

